source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
getwd()
setwd("~/github/datasciencecoursera")
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 23)
my_list2 <- my_specdata[ , "ID"] == id
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
print(mean(my_specdata[my_list2 , pollutant]), na.rm = TRUE)
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", 23)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 23)
source("pollutantmean.R")
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 23)
source('~/github/datasciencecoursera/pollutantmean.R')
pollutantmean("specdata", "nitrate", 23)
source('~/github/datasciencecoursera/pollutantmean.R')
pollutantmean("specdata", "nitrate", 23)
source('~/github/datasciencecoursera/pollutantmean.R')
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
source('~/github/datasciencecoursera/pollutantmean.R')
source('~/github/datasciencecoursera/pollutantmean.R')
source('~/github/datasciencecoursera/complete.R')
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
source('~/github/datasciencecoursera/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/github/datasciencecoursera/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/github/datasciencecoursera/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/github/datasciencecoursera/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/github/datasciencecoursera/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/github/datasciencecoursera/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/github/datasciencecoursera/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/github/datasciencecoursera/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/github/datasciencecoursera/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/github/datasciencecoursera/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
source('~/github/datasciencecoursera/complete.R')
complete("specdata", 30:25)
complete("specdata", 3)
complete("specdata", c(2, 4, 8, 10, 12))
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
submit()
submit()
submit()
submit()
library("data.table", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
submit()
source('~/github/datasciencecoursera/corr.R')
cr <- corr("specdata", 150)
source('~/github/datasciencecoursera/complete.R')
source('~/github/datasciencecoursera/corr.R')
cr <- corr("specdata", 150)
source('~/github/datasciencecoursera/corr.R')
source('~/github/datasciencecoursera/complete.R')
cr <- corr("specdata", 150)
source('~/github/datasciencecoursera/corr.R')
source('~/github/datasciencecoursera/complete.R')
cr <- corr("specdata", 150)
source('~/github/datasciencecoursera/corr.R')
source('~/github/datasciencecoursera/complete.R')
cr <- corr("specdata", 150)
source('~/github/datasciencecoursera/corr.R')
source('~/github/datasciencecoursera/corr.R')
source('~/github/datasciencecoursera/corr.R')
cr <- corr("specdata", 150)
source('~/github/datasciencecoursera/corr.R')
cr <- corr("specdata", 150)
source('~/github/datasciencecoursera/corr.R')
cr <- corr("specdata", 150)
source('~/github/datasciencecoursera/corr.R')
cr <- corr("specdata", 150)
source('~/github/datasciencecoursera/corr.R')
cr <- corr("specdata", 150)
source('~/github/datasciencecoursera/corr.R')
cr <- corr("specdata", 150)
source('~/github/datasciencecoursera/corr.R')
cr <- corr("specdata", 150)
source('~/github/datasciencecoursera/corr.R')
cr <- corr("specdata", 150)
source('~/github/datasciencecoursera/corr.R')
source('~/github/datasciencecoursera/corr.R')
cr <- corr("specdata", 150)
source('~/github/datasciencecoursera/corr.R')
source('~/github/datasciencecoursera/corr.R')
cr <- corr("specdata", 150)
source('~/github/datasciencecoursera/corr.R')
source('~/github/datasciencecoursera/corr.R')
cr <- corr("specdata", 150)
source('~/github/datasciencecoursera/corr.R')
cr <- corr("specdata", 150)
head(cr)
summary(cr)
source('~/github/datasciencecoursera/corr.R')
source('~/github/datasciencecoursera/corr.R')
cr <- corr("specdata", 150)
source('~/github/datasciencecoursera/corr.R')
cr <- corr("specdata", 150)
head(cr)
source('~/github/datasciencecoursera/corr.R')
summary(cr)
source('~/github/datasciencecoursera/corr.R')
cr <- corr("specdata", 150)
head(cr)
summary(cr)
source('~/github/datasciencecoursera/corr.R')
source('~/github/datasciencecoursera/corr.R')
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
submit()
submit()
submit()
getwd())
getwd()
getwd()
library(datasets)
data(iris)
?iris
iris
mean(iris[iris$Species == virginica, "Sepal.Length"])
mean(iris[iris$Species == "virginica", "Sepal.Length"])
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
apply(iris, 1, mean)
apply(iris[, 1:4], 2, mean)
class(apply(iris[, 1:4], 2, mean))
library(datasets)
data(mtcars)
?mtcars
mtcars
tapply(mtcars$cyl, mtcars$mpg, mean)
length(tapply(mtcars$cyl, mtcars$mpg, mean))
lapply(mtcars, mean)
apply(mtcars, 2, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
debug(ls)
ls()
exit
quit
clear
unset
source('~/github/datasciencecoursera/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(m)
m <- matrix(1:6, nrow = 2, ncol = 2)
makeCacheMatrix(m)
m
cacheSolve(m)
source('~/github/datasciencecoursera/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(m)
cacheSolve(m)
m$get
m
x
my_mat <- makeCacheMatrix(m)
my_mat$get
my_mat$get()
cacheSolve(my_mat)
my_mat$setinv()
my_mat$setinv(solve)
my_mat$getinv()
cacheSolve(my_mat)
my_mat$setinv()
my_mat$getinv()
m <- matrix(1:6, nrow = 2, ncol = 3)
m
my_mat <- makeCacheMatrix(m)
my_mat
my_mat$set()
my_mat$get()
my_mat$setinv()
my_mat$setinv(solve)
my_mat$getinv()
solve(m)
m <- matrix(1:6, nrow = 3, ncol = 3)
m <- matrix(1:9, nrow = 3, ncol = 3)
solve(m)
m <- matrix(1:16, nrow = 4, ncol = 4)
solve(m)
m <- matrix(1:16, nrow = 2, ncol = 2)
solve(m)
my_mat <- makeCacheMatrix(m)
my_mat$get()
my_mat$set(matrix(2:5, nrow=2, ncol=2))
my_mat$get()
my_mat$setinv(solve)
my_mat$getinv()
cacheSolve(my_mat)
source('~/github/datasciencecoursera/ProgrammingAssignment2/cachematrix.R')
my_mat$set(matrix(2:5, nrow=2, ncol=2))
my_mat$get()
cacheSolve(my_mat)
solve(my_mat)
solve(my_mat$ge())
solve(my_mat$get())
my_mat$getinv()
my_mat$setinv()
source('~/github/datasciencecoursera/ProgrammingAssignment2/cachematrix.R')
